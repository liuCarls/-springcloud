<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.lgx.springboot</groupId>
    <artifactId>pringmvc</artifactId>
    <version>1.0-SNAPSHOT</version>


    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <activiti.version>5.22.0</activiti.version>
        <!--<spring.version>5.1.6.RELEASE</spring.version>-->
        <!--<spring-security.version>5.1.5.RELEASE</spring-security.version>-->

        <!--<thymeleaf.version>3.0.2.RELEASE</thymeleaf.version>-->
        <!--<thymeleaf.version>2.1.4</thymeleaf.version>-->
        <!--<thymeleaf-layout-dialect.version>2.0.4</thymeleaf-layout-dialect.version>-->
    </properties>

    <dependencies>
        <!--Spring Boot-->
        <!--支持 Web 应用开发，包含 Tomcat 和 spring-mvc。 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--模板引擎-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!--在默认配置下，thymeleaf对.html的内容要求很严格，比如<meta charset="UTF-8" />，-->
        <!--如果少最后的标签封闭符号/，就会报错而转到错误页。也比如你在使用Vue.js这样的库，然后有<div v-cloak></div>这样的html代码，-->
        <!--也会被thymeleaf认为不符合要求而抛出错误。-->
        <!--因此，建议增加下面这段：-->
        <!--spring.thymeleaf.mode = LEGACYHTML5-->
        <!--spring.thymeleaf.mode的默认值是HTML5，其实是一个很严格的检查，改为LEGACYHTML5可以得到一个可能更友好亲切的格式要求。-->
        <!--LEGACYHTML5需要搭配一个额外的库NekoHTML才可用。-->
        <dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
            <version>1.9.22</version>
        </dependency>


        <!--支持使用 JDBC 访问数据库 starter不使用时，应注释掉，不然启动报错-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-jdbc</artifactId>-->
        <!--</dependency>-->
        <!--添加适用于生产环境的功能，如性能指标和监测等功能。 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--Mybatis-->
        <!-- 方式一 ，这个方式有默认使用-->
        <!--<dependency>-->
            <!--<groupId>org.mybatis.spring.boot</groupId>-->
            <!--<artifactId>mybatis-spring-boot-starter</artifactId>-->
            <!--<version>1.3.2</version>-->
        <!--</dependency>-->
        <!-- 方式二 -->
        <!--<dependency>-->
            <!--<groupId>org.mybatis</groupId>-->
            <!--<artifactId>mybatis-spring</artifactId>-->
            <!--&lt;!&ndash;<version>1.2.2</version>&ndash;&gt;-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.mybatis</groupId>-->
            <!--<artifactId>mybatis</artifactId>-->
            <!--&lt;!&ndash;<version>3.2.8</version>&ndash;&gt;-->
        <!--</dependency>-->
        <!--Mysql / DataSource-->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!--Json Support-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <!--<version>1.1.43</version>-->
        </dependency>
        <!-- spring security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!--Swagger support start-->
        <!--手写Api文档的几个痛点：-->
        <!--文档需要更新的时候，需要再次发送一份给前端，也就是文档更新交流不及时。-->
        <!--接口返回结果不明确-->
        <!--不能直接在线测试接口，通常需要使用工具，比如postman-->
        <!--接口文档太多，不好管理-->
        <!--当然也有缺点，最明显的就是代码移入性比较强。-->
        <!-- 第二种，spring依赖 -->
        <!--<dependency>-->
            <!--<groupId>com.spring4all</groupId>-->
            <!--<artifactId>swagger-spring-boot-starter</artifactId>-->
            <!--&lt;!&ndash;<version>1.7.0.RELEASE</version>&ndash;&gt;-->
        <!--</dependency>-->
        <!-- 第一种，直接依赖 -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.6.1</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.6.1</version>
        </dependency>
        <!--Swagger support end-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter</artifactId>-->
        <!--</dependency>-->


        <!--<dependency>-->
            <!--<groupId>com.baomidou</groupId>-->
            <!--<artifactId>mybatisplus-spring-boot-starter</artifactId>-->
            <!--&lt;!&ndash;<version>${mybatisplus.spring.boot.version}</version>&ndash;&gt;-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>com.baomidou</groupId>-->
            <!--<artifactId>mybatis-plus</artifactId>-->
            <!--&lt;!&ndash;<version>${mybatisplus.version}</version>&ndash;&gt;-->
        <!--</dependency>-->
        <!--activiti begin-->
        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-spring-boot-starter-basic</artifactId>
            <version>${activiti.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-transcoder</artifactId>
            <version>1.7</version>
        </dependency>
        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-json-converter</artifactId>
            <version>5.22.0</version>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>org.activiti</groupId>-->
            <!--<artifactId>activiti-engine</artifactId>-->
            <!--<version>${activiti.version}</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>org.activiti</groupId>-->
            <!--<artifactId>activiti-spring</artifactId>-->
            <!--<version>${activiti.version}</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>org.activiti</groupId>-->
            <!--<artifactId>activiti-modeler</artifactId>-->
            <!--<version>${activiti.version}</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>org.activiti</groupId>-->
            <!--<artifactId>activiti-diagram-rest</artifactId>-->
            <!--<version>${activiti.version}</version>-->
        <!--</dependency>-->
        <!--activiti end-->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>